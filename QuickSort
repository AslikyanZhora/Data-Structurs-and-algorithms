#include <iostream>

void QSort(int*, int, int);
int Partition(int*, int, int);
void Print(int*, int);
int main()
{

	int a[] = { 15, 12, 9, 13, 25, 16, 42, 45, 30 };
	QSort(a, 0, 8);
	Print(a, 9);

	system("pause");		
	return 0;
}

void QSort(int* p, int low, int high)
{
	if (low < high)
	{
		int q = Partition(p, low, high);
		QSort(p, low, q - 1);
		QSort(p, q + 1, high);
	}
}
int Partition(int* p, int low, int high)
{
	int pivot = p[high];
	int i = low - 1;
	for (int j = low; j < high; ++j)
	{
		if (p[j] <= pivot)
		{
			++i;
			std::swap(p[i], p[j]);
		}
	}
	std::swap(p[i + 1], p[high]);

	return (i + 1);
}
void Print(int* a, int n)
{
	for (int i = 0; i < n; ++i)
		std::cout << a[i] << "  ";
	std::cout << "\n";

}
